​class Estudiante {    
    String nombre   
    String dni
    int edad
    String ciudadNatal
    int calificacion
}
class Curso {
    List estudiantes=[]

    //#resetearNotas():Pone en cero las calificaciones de todos los estudiantes. 
    def resetearNotas() {
         this.estudiantes.each{it.calificacion=0}               
    }
    
     //#agregarEstudiante(unEstudiante): Agrega unEstudiante al curso
    def agregarEstudiante(Estudiante unEsdiante){
        this.estudiantes.add(unEstudiante)
    }
    
    //#cantidadDeEstudiantesInscriptos(): Retorna la cantidad de alumnos que se inscribieron al curso 
    def cantidadDeEstudiantesInscriptos(){
        return this.estiudiantes.size()
    }
    
    //#estudiantes(): Retorna la colección de estudiantes del curso
    def estudiantes(){
        return this.estiudiantes
    }

    // #estudiantesAprobados(): Retorna una colección con todos los estudiantes que aprobaron el curso (calificación superior a 4) 
    def estudiantesAprobados(){
        return this.estudiantes.findAll{it.calificacion>4}
    }

    // #existeEstudiante(unEstudiante): Indica si “unEstudiante” se encuentra inscripto en el curso 
    def existeEstudiante(Estudiante unEstudiante){
        return this.estudiantes.any{it.dni==unEstudiante.dni}
    }
    
    //#existeEstudianteConNotaDiez(): Determina si algún alumno obtuvo la calificación 10 
    def existeEstudianteConNotaDiez(){
        return this.estudiantes.any{it.calificacion==10}
    }

    //#existeEstudianteLlamado(unNombre)(): Indica si el estudiante llamado “unNombre” se encuentra inscripto en el curso 
    def existeEstudianteLlamado(String unNombre){
        return this.estudiantes.any{it.nombre.equals(unNombre)}
    }

    //#porcentajeDeAprobados(): Retorna en porcentaje de estudiantes aprobados
    def porcentajeDeAprobados(){
        List aprobados=this.estudiantes.findAll{it.calificacion>4}
        int porcentaje = (aprobados.size()*100)/estudiantes.size()
        return porcentaje
    }
    
// #promedioDeCalificaciones(): Calcula el promedio de las calificaciones obtenidas por los alumnos 
    def promedioDeCalificaciones(){
        int sumaCalificaciones
        estudiantes.each{
           sumaCalificaciones++ 
        }
        
        return sumaCalificaciones/estudiantes.size()
     }
     //#estudiantesNoCatamarquenios(): Retorna una colección con todos los estudiantes que no nacieron en Catamarca 
    def estudiantesNoCatamarquenios(){
        return this.estudiantes.findAll{it.ciudadNatal!="Catamarca"}
    }
    
    //#unDesastre(): Retorna verdadero si todos los estudiantes desaprobaron el curso  
    def unDesastre(){
        List aprobados = this.estudiantes.findAll{it.calificacion>4}
        if(aprobados.size()==0){
            return true
        }
    return false
}
}

