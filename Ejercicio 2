​class Estudiante {    
    String nombre   
    String dni
    int edad
    String ciudadNatal
    int calificacion
}
class Curso {
    List estudiantes=[]
    
    //#resetearNotas():Pone en cero las calificaciones de todos los estudiantes. 
    def resetearNotas() {
         this.estudiantes.each{it.calificacion=0}               
    }

    //#agregarEstudiante(unEstudiante): Agrega unEstudiante al curso
    def agregarEstudiante(unEstudiante){
        this.estudiantes.add(unEstudiante)
    }

    //#cantidadDeEstudiantesInscriptos(): Retorna la cantidad de alumnos que se inscribieron al curso 
    def cantidadDeEstudiantesInscriptos(){
        return this.estudiantes.size()
    }

    //#estudiantes(): Retorna la colección de estudiantes del curso
    def estudiantes(){
        return this.estudiantes
    }

    // #estudiantesAprobados(): Retorna una colección con todos los estudiantes que aprobaron el curso (calificación superior a 4) 
    def estudiantesAprobados(){
        return this.estudiantes.findAll{it.calificacion>4}
    }

    // #existeEstudiante(unEstudiante): Indica si “unEstudiante” se encuentra inscripto en el curso 
    def existeEstudiante(Estudiante unEstudiante){
        return this.estudiantes.any{it.dni==unEstudiante.dni}
    }

    //#existeEstudianteConNotaDiez(): Determina si algún alumno obtuvo la calificación 10 
    def existeEstudianteConNotaDiez(){
        return this.estudiantes.any{it.calificacion==10}
    }

    //#existeEstudianteLlamado(unNombre)(): Indica si el estudiante llamado “unNombre” se encuentra inscripto en el curso 
    def existeEstudianteLlamado(String unNombre){
        return this.estudiantes.any{it.nombre.equals(unNombre)}
    }

    //#porcentajeDeAprobados(): Retorna en porcentaje de estudiantes aprobados
    def porcentajeDeAprobados(){
        List aprobados=this.estudiantes.findAll{it.calificacion>4}
        int porcentaje = (aprobados.size()*100)/estudiantes.size()
        return porcentaje
    }

    // #promedioDeCalificaciones(): Calcula el promedio de las calificaciones obtenidas por los alumnos 
    def promedioDeCalificaciones(){
        int sumaCalificaciones
        
        for ( def est : estudiantes() ) {   
            sumaCalificaciones=sumaCalificaciones+est.calificacion
       }
        
        return sumaCalificaciones/estudiantes.size()
     }

    //#estudiantesNoCatamarquenios(): Retorna una colección con todos los estudiantes que no nacieron en Catamarca 
    def estudiantesNoCatamarquenios(){
        return this.estudiantes.findAll{it.ciudadNatal!="Catamarca"}
    }

//#Calificación más frecuente del curso:Retorna la calificación más frecuente del curso
def calificacionMasFrecuente() {
     List notas=[]

     notas= this.estudiantes.calificacion

     def i;
     def j=0 
      
     List contador = []
     for (i=0; i < 20 ;i++){
         contador[i]=0
     }

     for (j=0; j < notas.size();j++){
         for (i=0; i < notas.size();i++){
             if (notas[j] == notas[i]){
               contador[j]=contador[j] + 1
             }
         }
     }

     int iNumeroMayor, iPosicion;
 
  //Suponemos que el numero mayor es el primero
     iNumeroMayor = contador[0];
     iPosicion = 0;
     for (i=1;i <contador.size();i++){
         if (contador[i]>iNumeroMayor){
             iNumeroMayor = contador[i];
             iPosicion = i;
         } 
     }
}


