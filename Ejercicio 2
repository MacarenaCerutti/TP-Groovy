​class Estudiante {    
    String nombre   
    String dni
    int edad
    String ciudadNatal
    int calificacion
}
class Curso {
    List estudiantes=[]
    
    //#resetearNotas():Pone en cero las calificaciones de todos los estudiantes. 
    def resetearNotas() {
         this.estudiantes.each{it.calificacion=0}               
    }

    //#agregarEstudiante(unEstudiante): Agrega unEstudiante al curso
    def agregarEstudiante(unEstudiante){
        this.estudiantes.add(unEstudiante)
    }

    //#cantidadDeEstudiantesInscriptos(): Retorna la cantidad de alumnos que se inscribieron al curso 
    def cantidadDeEstudiantesInscriptos(){
        return this.estudiantes.size()
    }

    //#estudiantes(): Retorna la colección de estudiantes del curso
    def estudiantes(){
        return this.estudiantes
    }

    // #estudiantesAprobados(): Retorna una colección con todos los estudiantes que aprobaron el curso (calificación superior a 4) 
    def estudiantesAprobados(){
        return this.estudiantes.findAll{it.calificacion>4}
    }

    // #existeEstudiante(unEstudiante): Indica si “unEstudiante” se encuentra inscripto en el curso 
    def existeEstudiante(Estudiante unEstudiante){
        return this.estudiantes.any{it.dni==unEstudiante.dni}
    }

    //#existeEstudianteConNotaDiez(): Determina si algún alumno obtuvo la calificación 10 
    def existeEstudianteConNotaDiez(){
        return this.estudiantes.any{it.calificacion==10}
    }

    //#existeEstudianteLlamado(unNombre)(): Indica si el estudiante llamado “unNombre” se encuentra inscripto en el curso 
    def existeEstudianteLlamado(String unNombre){
        return this.estudiantes.any{it.nombre.equals(unNombre)}
    }

    //#porcentajeDeAprobados(): Retorna en porcentaje de estudiantes aprobados
    def porcentajeDeAprobados(){
        List aprobados=this.estudiantes.findAll{it.calificacion>4}
        int porcentaje = (aprobados.size()*100)/estudiantes.size()
        return porcentaje
    }

    // #promedioDeCalificaciones(): Calcula el promedio de las calificaciones obtenidas por los alumnos 
    def promedioDeCalificaciones(){
        int sumaCalificaciones
        
        for ( def est : estudiantes() ) {   
            sumaCalificaciones=sumaCalificaciones+est.calificacion
       }
        
        return sumaCalificaciones/estudiantes.size()
     }

    //#estudiantesNoCatamarquenios(): Retorna una colección con todos los estudiantes que no nacieron en Catamarca 
    def estudiantesNoCatamarquenios(){
        return this.estudiantes.findAll{it.ciudadNatal!="Catamarca"}
    }
    
 //#unDesastre(): Retorna verdadero si todos los estudiantes desaprobaron el curso  
    def unDesastre(){
        List aprobados = this.estudiantes.findAll{it.calificacion>4}
        if(aprobados.size()==0){
            return true
        }
    return false
    }

//#Calificación más frecuente del curso:Retorna la calificación más frecuente del curso
def calificacionMasFrecuente() {
     List notas=[]

     notas= this.estudiantes.calificacion

     def i;
     def j=0 
      
     List contador = []
     for (i=0; i < 20 ;i++){
         contador[i]=0
     }

     for (j=0; j < notas.size();j++){
         for (i=0; i < notas.size();i++){
             if (notas[j] == notas[i]){
               contador[j]=contador[j] + 1
             }
         }
     }

     int iNumeroMayor, iPosicion;
 
  //Suponemos que el numero mayor es el primero
     iNumeroMayor = contador[0];
     iPosicion = 0;
     for (i=1;i <contador.size();i++){
         if (contador[i]>iNumeroMayor){
             iNumeroMayor = contador[i];
             iPosicion = i;
         } 
     }
 }
}

static main( args ){
    def curso1 = new Curso() //Creamos un curso

    def estudiante1 = new Estudiante(nombre:"Nombre1", dni:"111", edad: 11, ciudadNatal: "ciudad1", calificacion: 1) //Creamos unos estudiantes
    def estudiante2 = new Estudiante(nombre:"Nombre2", dni:"222", edad: 22, ciudadNatal: "ciudad2", calificacion: 2)
    def estudiante3 = new Estudiante(nombre:"Nombre3", dni:"333", edad: 33, ciudadNatal: "ciudad3", calificacion: 3)
    def estudiante4 = new Estudiante(nombre:"Nombre4", dni:"444", edad: 44, ciudadNatal: "ciudad4", calificacion: 4)
    def estudiante5 = new Estudiante(nombre:"Nombre5", dni:"555", edad: 55, ciudadNatal: "ciudad5", calificacion: 5)
    def estudiante6 = new Estudiante(nombre:"Nombre6", dni:"666", edad: 66, ciudadNatal: "ciudad6", calificacion: 6)
    def estudiante7 = new Estudiante(nombre:"Nombre7", dni:"777", edad: 77, ciudadNatal: "Catamarca", calificacion: 7)
    def estudiante8 = new Estudiante(nombre:"Nombre8", dni:"888", edad: 88, ciudadNatal: "ciudad8", calificacion: 8)
    def estudiante9 = new Estudiante(nombre:"Nombre9", dni:"999", edad: 99, ciudadNatal: "ciudad9", calificacion: 9)
    def estudiante10 = new Estudiante(nombre:"Nombre10", dni:"1010", edad: 1010, ciudadNatal: "ciudad10", calificacion: 10)
    def estudiante11 = new Estudiante(nombre:"Nombre11", dni:"1111", edad: 1111, ciudadNatal: "ciudad11", calificacion: 10)

    curso1.agregarEstudiante(estudiante1)    //Los agregamos al curso
    curso1.agregarEstudiante(estudiante2)
    curso1.agregarEstudiante(estudiante3)
    curso1.agregarEstudiante(estudiante4)
    curso1.agregarEstudiante(estudiante5)
    curso1.agregarEstudiante(estudiante6)
    curso1.agregarEstudiante(estudiante7)
    curso1.agregarEstudiante(estudiante8)
    curso1.agregarEstudiante(estudiante9)
    curso1.agregarEstudiante(estudiante10)
    
    println "La cantidad de alumnos inscriptos es: "+curso1.cantidadDeEstudiantesInscriptos() + "\n"  //Usamos la funcion para saber la cantidad de aliumnos en el curso
    
    println "Los Estudiantes son:"
    println curso1.estudiantes().each{      //usamos la funcion estudianotes para obtenerlos y mostrarlos
        println "Nombre: $it.nombre - Dni: $it.dni - Edad: $it.edad - Ciudad: $it.ciudadNatal - Calificacion: $it.calificacion"
    }
    
    println "\n"    

    println "Los Estudiantes aprobados son:"
    println curso1.estudiantesAprobados().each{      //usamos la funcion estudianotes para obtenerlos y mostrarlos
        println "Nombre: $it.nombre - Dni: $it.dni - Edad: $it.edad - Ciudad: $it.ciudadNatal - Calificacion: $it.calificacion"
    }

    println "\n" 
    //Probamos la funcion existeEstudiante 
    println "El estudiante "+ estudiante1.getNombre()+" Se encuentra en el curso? : "+ curso1.existeEstudiante(estudiante1)
    println "El estudiante "+ estudiante1.getNombre()+" Se encuentra en el curso? : "+ curso1.existeEstudiante(estudiante11)

    println "\n" 
    //Probamos la funcion existeEstudianteConNotaDiez()
    println "Existe algun estudiante con nota 10? :" + curso1.existeEstudianteConNotaDiez()

    println "\n"
    //existeEstudianteLlamado()
    println "Existe algun estudiante llamado Nombre1? :" + curso1.existeEstudianteLlamado("Nombre1")

    println "\n"
    //Probamos la funcion porcentajeDeAprobados()
    println "El porcentaje de Alumnos Aprobados es de: " + curso1.porcentajeDeAprobados()+"%"

    
    println "\n"
    //Probamos la funcion promedioDeCalificaciones
    println "El promedio de calificaciones es: " + curso1.promedioDeCalificaciones()

    println "\n"
    //Probamos la funcion estudiantesNoCatamarquenios
    println "Los estudiantes que no nacieron en catamarca son:"
    println curso1.estudiantesNoCatamarquenios().each{      //usamos la funcion estudianotes para obtenerlos y mostrarlos
        println "Nombre: $it.nombre - Dni: $it.dni - Edad: $it.edad - Ciudad: $it.ciudadNatal - Calificacion: $it.calificacion"
    }


    println "\n" 
    //Probamos la funcion unDesastre()
    println "Todos los alumnos desaprobaron? :" + curso1.unDesastre()


    
    println "\n"   
    
    //Probamos la funcion resetearNotas
    println "Los alumnos con las notas receteadas son:"
    curso1.resetearNotas()    
    println curso1.estudiantes().each{
        println "Nombre: $it.nombre - Dni: $it.dni - Edad: $it.edad - Ciudad: $it.ciudadNatal - Calificacion: $it.calificacion"
    }
    
     println "\n"  

}
